!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.transliterate=e():t.transliterate=e()}(this,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";function r(){return String.fromCodePoint(Math.floor(95*Math.random())+9632)}function o(t,e){return i(t,e)}n.r(e),n.d(e,"sanitize",function(){return o}),n.d(e,"Sanitizer",function(){return u}),n.d(e,"transliterate",function(){return i}),n.d(e,"Transliterator",function(){return s});class u{constructor(t){return this.substitutions=t,e=>o(e,t)}}function i(t="",e={}){if("string"!=typeof t)throw new TypeError("The first argument passed to the transliterate function must be a string.");if("object"!=typeof e||!Object.values(e).every(t=>"string"==typeof t))throw new TypeError("The second argument passed to the transliterate function must be an object whose attributes and values are both strings.");const n=Object.keys(e),o=new Map,u=new Map;let i=t;return Object.entries(e).sort(([t],[e])=>e.length-t.length).forEach(([t,e])=>{const s=t.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&");if(o.set(s,e),n.includes(e)){let t=r();for(;u.has(t);)t=r();u.set(t,e),o.set(s,t)}const c=new RegExp(s,"gu");i=i.replace(c,o.get(s))}),u.forEach((t,e)=>{const n=new RegExp(e,"gu");i=i.replace(n,t)}),i}class s{constructor(t){return this.substitutions=t,t=>i(t,this.substitutions)}}}])});