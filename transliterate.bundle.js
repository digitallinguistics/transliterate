!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.transliterate=e():t.transliterate=e()}(this,function(){return function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=0)}([function(t,e,r){"use strict";function n(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var r=[],n=!0,o=!1,u=void 0;try{for(var i,s=t[Symbol.iterator]();!(n=(i=s.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){o=!0,u=t}finally{try{n||null==s.return||s.return()}finally{if(o)throw u}}return r}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function o(){return String.fromCodePoint(Math.floor(95*Math.random())+9632)}function u(t,e){return s(t,e)}r.r(e),r.d(e,"sanitize",function(){return u}),r.d(e,"Sanitizer",function(){return i}),r.d(e,"transliterate",function(){return s}),r.d(e,"Transliterator",function(){return a});class i{constructor(t){return this.substitutions=t,e=>u(e,t)}}function s(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if("string"!=typeof t)throw new TypeError("The first argument passed to the transliterate function must be a string.");if("object"!=typeof e||!Object.values(e).every(t=>"string"==typeof t))throw new TypeError("The second argument passed to the transliterate function must be an object whose attributes and values are both strings.");const r=Object.keys(e),u=new Map,i=new Map;let s=t;return Object.entries(e).sort((t,e)=>{let r=n(t,1)[0];return n(e,1)[0].length-r.length}).forEach(t=>{let e=n(t,2),a=e[0],c=e[1];const f=a.replace(/[\$\(-\+\.\?\[-\^\{-\}]/g,"\\$&");if(u.set(f,c),r.includes(c)){let t=o();for(;i.has(t);)t=o();i.set(t,c),u.set(f,t)}const l=new RegExp(f,"gu");s=s.replace(l,u.get(f))}),i.forEach((t,e)=>{const r=new RegExp(e,"gu");s=s.replace(r,t)}),s}class a{constructor(t){return this.substitutions=t,t=>s(t,this.substitutions)}}}])});